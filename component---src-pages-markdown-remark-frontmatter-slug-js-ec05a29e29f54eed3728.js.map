{"version":3,"file":"component---src-pages-markdown-remark-frontmatter-slug-js-ec05a29e29f54eed3728.js","mappings":"yKAEaA,E,QAAOC,QAAAA,KAAAA,WAAH,gEAAGA,CAAH,2rB,oBC2DjB,EAvDiB,YACFC,EAAAA,EAAAA,gBAAe,aAsB5B,OACE,gBAACC,EAAA,EAAD,KACE,gBAACH,EAAD,KACG,CACCI,GADD,SACIC,GACDA,EAAKC,kBAAkBC,MAAMC,KAAI,SAACC,EAAMC,GAAP,OAC/B,qBACEC,OAAO,SACPC,IAAI,aACJC,KAAMJ,EAAKK,KAAKC,YAAYC,KAC5BC,IAAKP,GAEL,0BAAKD,EAAKK,KAAKC,YAAYG,MAC3B,+BACE,gBAAC,EAAAC,EAAD,CACEC,MACEX,EAAKK,KAAKC,YAAYM,cAAcC,gBACjCC,gBAELC,IAAI,MAGR,yBAAIf,EAAKK,KAAKC,YAAYU","sources":["webpack://hmilly/./src/styles/Projects.styled.js","webpack://hmilly/./src/pages/{MarkdownRemark.frontmatter__slug}.js"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Grid = styled.main`\r\n  display: grid;\r\n  padding: 20px;\r\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n  grid-template-rows: auto;\r\n  gap: 20px;\r\n  justify-content: space-evenly;\r\n  overflow-y: scroll;\r\n  ::-webkit-scrollbar-track {\r\n    box-shadow: inset 0 0 6px rgba(34, 1, 77, 0.3);\r\n  }\r\n  ::-webkit-scrollbar {\r\n    width: 4px;\r\n    background-color: #68257981;\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    background-color: #ffbfff93;\r\n    outline: 1px solid #cf11ff;\r\n  }\r\n\r\n  a {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: auto 1fr auto;\r\n    gap: 10px;\r\n    padding: 10px;\r\n    align-content: space-between;\r\n    background-color: #26003bce;\r\n    border: solid 3px #350152;\r\n    border-radius: 4px;\r\n    text-decoration: none;\r\n    text-align: center;\r\n    section {\r\n      align-self: center;\r\n      width: 95%;\r\n      margin: 0 auto;\r\n      &:hover {\r\n        padding: 5px;\r\n        transition: 0.5s;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\nimport { Grid } from \"../styles/Projects.styled\";\r\nimport Layout from \"../components/Layout\";\r\nimport { GatsbyImage } from \"gatsby-plugin-image\";\r\n\r\nconst Projects = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      allMarkdownRemark {\r\n        edges {\r\n          node {\r\n            frontmatter {\r\n              name\r\n              slug\r\n              link\r\n              description\r\n              featuredImage {\r\n                childImageSharp {\r\n                  gatsbyImageData(layout: CONSTRAINED)\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  return (\r\n    <Layout>\r\n      <Grid>\r\n        {{\r\n          if(data) {\r\n            data.allMarkdownRemark.edges.map((edge, i) => (\r\n              <a\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                href={edge.node.frontmatter.link}\r\n                key={i}\r\n              >\r\n                <h2>{edge.node.frontmatter.name}</h2>\r\n                <section>\r\n                  <GatsbyImage\r\n                    image={\r\n                      edge.node.frontmatter.featuredImage.childImageSharp\r\n                        .gatsbyImageData\r\n                    }\r\n                    alt=\"\"\r\n                  />\r\n                </section>\r\n                <p>{edge.node.frontmatter.description}</p>\r\n              </a>\r\n            ));\r\n          },\r\n        }}\r\n      </Grid>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n"],"names":["Grid","styled","useStaticQuery","Layout","if","data","allMarkdownRemark","edges","map","edge","i","target","rel","href","node","frontmatter","link","key","name","G","image","featuredImage","childImageSharp","gatsbyImageData","alt","description"],"sourceRoot":""}